{"version":3,"sources":["Components/scss/navbar.scss","Shared/scss/_padding.scss","Shared/scss/sass-flexbox.scss","Shared/scss/_typography.scss","Shared/scss/_reset.scss","Shared/scss/default.scss","Shared/scss/_colors.scss"],"names":[],"mappings":"AAKA,QCJI,WAAY,CCKd,uBAAwB,CAGxB,YAAa,CAwOb,uBAa2B,CAZ3B,kBAY2B,CFrPzB,WAAY,CACZ,UCTY,CDIhB,eAQQ,UAAW,CACX,UAAW,CACX,MAAO,CACP,KAAK,CACL,iBAAkB,CAClB,YAAa,CACb,cAAe,CACf,wBAAiB,CAAjB,gBAAiB,CAIzB,cACI,eAAgB,CAChB,cAAe,CACf,iBAAkB,CAClB,wBAAyB,CACzB,oBAAqB,CG7BzB,wEAAY,CCAZ,2ZAaC,QAAS,CACT,SAAU,CACV,QAAS,CACT,cAAe,CACf,YAAa,CACb,uBAAwB,CAGzB,8EAEC,aAAc,CAEf,KACC,aAAc,CAEf,MACC,eAAgB,CAEjB,aACC,WAAY,CAEb,oDAEC,UAAW,CACX,YAAa,CAEd,MACC,wBAAyB,CACzB,gBAAiB,CAGlB,EACI,uCAAwC,CACxC,+CAAgD,CDpCpD,UAJQ,gCAJE,CAUN,cAAe,CACf,eAAgB,CAChB,gBAAiB,CERjB,UFQiB,CELrB,KACI,WAAY,CACZ,yBAA0B,CAE1B,aCbwB,CDcxB,kDAA8D,CAGlE,KACI,eAAgB,CAChB,QAAS,CAIb,iBACI,kBCnBoB,CDoBpB,gBAAiB,CAFrB,YACI,kBCnBoB,CDoBpB,gBAAiB","file":"site.css","sourcesContent":["@import '../../Shared/scss/colors';\r\n@import '../../Shared/scss/sass-flexbox';\r\n@import '../../Shared/scss/padding';\r\n@import '../../Shared//scss/shadows';\r\n\r\n.navbar {\r\n    @include display-flex;\r\n    @include align-items-center;\r\n    @extend %padding-5;\r\n    height: 64px;\r\n    width: 100%;\r\n    //background: linear-gradient(-45deg, $umbra-blue, $important-blue);\r\n    ::after{\r\n        z-index: -1;\r\n        content: \"\";\r\n        left: 0;\r\n        top:0;\r\n        position: absolute;\r\n        height: 100vh;\r\n        width: 166.667%;\r\n        filter: blur(2px);\r\n    }\r\n}\r\n\r\n.navbar-brand {\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    font-style: normal;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n}","%padding-5 {\r\n    padding: 5px;\r\n}\r\n\r\n%padding-10{\r\n    padding: 10px;\r\n}","$sass-flexbox-rename-map: (nowrap: none, auto: auto, flex-start: start, flex-end: end, center: center, baseline: baseline, space-between: space-between, space-around: space-around, stretch: stretch, inherit: inherit);\r\n\r\n// Display\r\n@mixin display-flex {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -webkit-flexbox;\r\n  display: -ms-flexbox;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n}\r\n\r\n@mixin display-inline-flex {\r\n  display: -webkit-inline-flex;\r\n  display: inline-flex;\r\n}\r\n\r\n%display-flex {\r\n  @include display-flex;\r\n}\r\n\r\n%display-inline-flex {\r\n  @include display-inline-flex;\r\n}\r\n\r\n// Flex direction\r\n$flex-direction-args: row, row-reverse, column, column-reverse, inherit;\r\n\r\n@mixin flex-direction($direction: row) {\r\n  @if not index($flex-direction-args, $direction) {\r\n    @error \"flex-direction has been passed an invalid argument: #{$direction}\";\r\n  }\r\n\r\n  $reverse: false;\r\n\r\n  @if index((row-reverse, column-reverse), $direction) {\r\n    $reverse: true;\r\n  }\r\n\r\n  $orientation: inherit;\r\n\r\n  @if index((row, row-reverse), $direction) {\r\n    $orientation: horizontal;\r\n  }\r\n\r\n  @if index((column, column-reverse), $direction) {\r\n    $orientation: vertical;\r\n  }\r\n\r\n  -webkit-box-orient: $orientation;\r\n  -moz-box-orient: $orientation;\r\n\r\n  @if $reverse {\r\n    -webkit-box-direction: reverse;\r\n    -moz-box-direction: reverse;\r\n  }\r\n\r\n  -webkit-flex-direction: $direction;\r\n  -moz-flex-direction: $direction;\r\n  -ms-flex-direction: $direction;\r\n  flex-direction: $direction;\r\n}\r\n\r\n@mixin flex-direction-row {\r\n  @include flex-direction(row);\r\n}\r\n\r\n@mixin flex-direction-row-reverse {\r\n  @include flex-direction(row-reverse);\r\n}\r\n\r\n@mixin flex-direction-column {\r\n  @include flex-direction(column);\r\n}\r\n\r\n@mixin flex-direction-column-reverse {\r\n  @include flex-direction(column-reverse);\r\n}\r\n\r\n@mixin flex-direction-inherit {\r\n  @include flex-direction(inherit);\r\n}\r\n\r\n@each $arg in $flex-direction-args {\r\n  %flex-direction-#{$arg} {\r\n    @include flex-direction($arg);\r\n  }\r\n}\r\n\r\n// Flex wrap\r\n$flex-wrap-args: nowrap, wrap, wrap-reverse, inherit;\r\n\r\n@mixin flex-wrap($wrap: nowrap) {\r\n  @if not index($flex-wrap-args, $wrap) {\r\n    @error \"flex-wrap has been passed an invalid argument: #{$wrap}\";\r\n  }\r\n\r\n  -webkit-flex-wrap: $wrap;\r\n  -moz-flex-wrap: $wrap;\r\n  -ms-flex-wrap: map-get($sass-flexbox-rename-map, $wrap);\r\n  flex-wrap: $wrap;\r\n}\r\n\r\n@mixin flex-wrap-nowrap {\r\n  @include flex-wrap(nowrap);\r\n}\r\n\r\n@mixin flex-wrap-wrap {\r\n  @include flex-wrap(wrap);\r\n}\r\n\r\n@mixin flex-wrap-wrap-reverse {\r\n  @include flex-wrap(wrap-reverse);\r\n}\r\n\r\n@mixin flex-wrap-inherit {\r\n  @include flex-wrap(inherit);\r\n}\r\n\r\n@each $arg in $flex-wrap-args {\r\n  %flex-wrap-#{$arg} {\r\n    @include flex-wrap($arg);\r\n  }\r\n}\r\n\r\n// Order\r\n@mixin order($order: 0) {\r\n  -webkit-box-ordinal-group: $order + 1;\r\n  -moz-box-ordinal-group: $order;\r\n  -ms-flex-order: $order;\r\n  -webkit-order: $order;\r\n  -moz-order: $order;\r\n  order: $order;\r\n}\r\n\r\n// Flex flow\r\n@mixin flex-flow($direction: row, $wrap: nowrap) {\r\n  @include flex-direction($direction);\r\n  @include flex-wrap($wrap);\r\n}\r\n\r\n// Flex grow\r\n@mixin flex-grow($grow: 0) {\r\n  -webkit-flex-grow: $grow;\r\n  -webkit-box-flex: $grow;\r\n  -moz-flex-grow: $grow;\r\n  -ms-flex-positive: $grow;\r\n  flex-grow: $grow;\r\n}\r\n\r\n// Flex shrink\r\n@mixin flex-shrink($shrink: 1) {\r\n  -webkit-flex-shrink: $shrink;\r\n  -webkit-box-flex: $shrink;\r\n  -moz-flex-shrink: $shrink;\r\n  -ms-flex-negative: $shrink;\r\n  flex-shrink: $shrink;\r\n}\r\n\r\n// Flex basis\r\n@mixin flex-basis($basis: auto) {\r\n  -webkit-flex-basis: $basis;\r\n  -moz-flex-basis: $basis;\r\n  -ms-flex-preferred-size: $basis;\r\n  flex-basis: $basis;\r\n}\r\n\r\n// Flex\r\n@mixin flex($grow: 0, $shrink: 1, $basis: auto) {\r\n  @include flex-grow($grow);\r\n  @include flex-shrink($shrink);\r\n  @include flex-basis($basis);\r\n}\r\n\r\n// Justify content\r\n$justify-content-args: flex-start, flex-end, center, space-between, space-around, space-evenly, inherit;\r\n\r\n@mixin justify-content($justify: flex-start) {\r\n  @if not index($justify-content-args, $justify) {\r\n    @error \"justify-content has been passed an invalid argument: #{$justify}\";\r\n  }\r\n\r\n  @if $justify == space-between {\r\n    -webkit-box-pack: justify;\r\n    -moz-box-pack: justify;\r\n    -webkit-flex-pack: justify;\r\n    -ms-flex-pack: justify;\r\n  }\r\n  @else if $justify != space-around {\r\n    -webkit-box-pack: map-get($sass-flexbox-rename-map, $justify);\r\n    -moz-box-pack: map-get($sass-flexbox-rename-map, $justify);\r\n    -webkit-flex-pack: map-get($sass-flexbox-rename-map, $justify);\r\n    -ms-flex-pack: map-get($sass-flexbox-rename-map, $justify);\r\n  }\r\n\r\n  -moz-justify-content: $justify;\r\n  -webkit-justify-content: $justify;\r\n  justify-content: $justify;\r\n}\r\n\r\n@mixin justify-content-flex-start {\r\n  @include justify-content(flex-start);\r\n}\r\n\r\n@mixin justify-content-flex-end {\r\n  @include justify-content(flex-end);\r\n}\r\n\r\n@mixin justify-content-center {\r\n  @include justify-content(center);\r\n}\r\n\r\n@mixin justify-content-space-between {\r\n  @include justify-content(space-between);\r\n}\r\n\r\n@mixin justify-content-space-around {\r\n  @include justify-content(space-around);\r\n}\r\n\r\n@mixin justify-content-inherit {\r\n  @include justify-content(inherit);\r\n}\r\n\r\n@each $arg in $justify-content-args {\r\n  %justify-content-#{$arg} {\r\n    @include justify-content($arg);\r\n  }\r\n}\r\n\r\n// Align items\r\n$align-items-args: flex-start, flex-end, center, baseline, stretch, inherit;\r\n\r\n@mixin align-items($align: stretch) {\r\n  @if not index($align-items-args, $align) {\r\n    @error \"align-items has been passed an invalid argument: #{$align}\";\r\n  }\r\n\r\n  -webkit-box-align: map-get($sass-flexbox-rename-map, $align);\r\n  -ms-flex-align: map-get($sass-flexbox-rename-map, $align);\r\n  -webkit-align-items: $align;\r\n  -moz-align-items: $align;\r\n  align-items: $align;\r\n}\r\n\r\n@mixin align-items-flex-start {\r\n  @include align-items(flex-start);\r\n}\r\n\r\n@mixin align-items-flex-end {\r\n  @include align-items(flex-end);\r\n}\r\n\r\n@mixin align-items-center {\r\n  @include align-items(center);\r\n}\r\n\r\n@mixin align-items-baseline {\r\n  @include align-items(baseline);\r\n}\r\n\r\n@mixin align-items-stretch {\r\n  @include align-items(stretch);\r\n}\r\n\r\n@mixin align-items-inherit {\r\n  @include align-items(inherit);\r\n}\r\n\r\n@each $arg in $align-items-args {\r\n  %align-items-#{$arg} {\r\n    @include align-items($arg);\r\n  }\r\n}\r\n\r\n// Align self\r\n$align-self-args: auto, flex-start, flex-end, center, baseline, stretch, inherit;\r\n\r\n@mixin align-self($align: auto) {\r\n  @if not index($align-self-args, $align) {\r\n    @error \"align-self has been passed an invalid argument: #{$align}\";\r\n  }\r\n\r\n  -ms-flex-item-align: map-get($sass-flexbox-rename-map, $align);\r\n  -webkit-align-self: $align;\r\n  -moz-align-self: $align;\r\n  align-self: $align;\r\n}\r\n\r\n@mixin align-self-auto {\r\n  @include align-self(auto);\r\n}\r\n\r\n@mixin align-self-flex-start {\r\n  @include align-self(flex-start);\r\n}\r\n\r\n@mixin align-self-flex-end {\r\n  @include align-self(flex-end);\r\n}\r\n\r\n@mixin align-self-center {\r\n  @include align-self(center);\r\n}\r\n\r\n@mixin align-self-baseline {\r\n  @include align-self(baseline);\r\n}\r\n\r\n@mixin align-self-stretch {\r\n  @include align-self(stretch);\r\n}\r\n\r\n@mixin align-self-inherit {\r\n  @include align-self(inherit);\r\n}\r\n\r\n@each $arg in $align-self-args {\r\n  %align-self-#{$arg} {\r\n    @include align-self($arg);\r\n  }\r\n}\r\n\r\n// Align content\r\n$align-content-args: flex-start, flex-end, center, space-between, space-around, space-evenly, stretch, inherit;\r\n\r\n@mixin align-content($align: stretch) {\r\n  @if not index($align-content-args, $align) {\r\n    @error \"align-content has been passed an invalid argument: #{$align}\";\r\n  }\r\n\r\n  -ms-flex-line-pack: map-get($sass-flexbox-rename-map, $align);\r\n  -webkit-align-content: $align;\r\n  -moz-align-content: $align;\r\n  align-content: $align;\r\n}\r\n\r\n@mixin align-content-flex-start {\r\n  @include align-content(flex-start);\r\n}\r\n\r\n@mixin align-content-flex-end {\r\n  @include align-content(flex-end);\r\n}\r\n\r\n@mixin align-content-center {\r\n  @include align-content(center);\r\n}\r\n\r\n@mixin align-content-space-between {\r\n  @include align-content(space-between);\r\n}\r\n\r\n@mixin align-content-space-around {\r\n  @include align-content(space-around);\r\n}\r\n\r\n@mixin align-content-stretch {\r\n  @include align-content(stretch);\r\n}\r\n\r\n@mixin align-content-inherit {\r\n  @include align-content(inherit);\r\n}\r\n\r\n@each $arg in $align-content-args {\r\n  %align-content-#{$arg} {\r\n    @include align-content($arg);\r\n  }\r\n}\r\n","@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');\r\n$preferred_font: 'Open Sans',\r\nsans-serif;\r\n\r\n@mixin typo-preferred-font($usePreferred: true) {\r\n    @if $usePreferred {\r\n        font-family: $preferred_font;\r\n    }\r\n}\r\n\r\nhtml, body {\r\n    @include typo-preferred-font();\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 20px;\r\n}","html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\na {\r\n    -webkit-tap-highlight-color: transparent;\r\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\r\n}","@import 'reset';\r\n@import 'colors';\r\n@import 'typography';\r\n\r\nhtml,\r\nbody {\r\n    width: 100%;\r\n}\r\n\r\nhtml {\r\n    height: 100%;\r\n    touch-action: manipulation;\r\n\r\n    color: $text-color-primary;\r\n    background: linear-gradient(-45deg, $shadow-blue, $umbra-blue);\r\n}\r\n\r\nbody {\r\n    min-height: 100%;\r\n    margin: 0;\r\n}\r\n\r\n\r\n::selection {\r\n    background: $important-blue;\r\n    text-shadow: none;\r\n}","$text-color-primary: #dce7f1;\r\n\r\n$shadow-blue: #06256f;\r\n$umbra-blue: #235299;\r\n$highlight-blue: #a2bfd7;\r\n$important-blue: #6a96b8;\r\n$washed-out: #807a71;"]}